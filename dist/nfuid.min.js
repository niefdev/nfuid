class NFUID{#BASE_ALPHABET;#BASE_MAP;#timestampBits;#randomBits;#baseRadix;constructor({baseAlphabet:t="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",timestampLength:i=32,entropyLength:e=96}={}){if(!/^[\x21-\x7E]+$/.test(t)||t.includes(" "))throw new Error("Base alphabet must contain only valid ASCII characters without whitespace");if(new Set(t.split("")).size!==t.length)throw new Error("Base alphabet must not contain duplicate characters");this.#BASE_ALPHABET=t,this.#baseRadix=BigInt(t.length),this.#timestampBits=i,this.#randomBits=e,this.#BASE_MAP={};for(let t=0;t<this.#BASE_ALPHABET.length;t++)this.#BASE_MAP[this.#BASE_ALPHABET[t]]=BigInt(t)}#toBase(t,i=0){if(0n===t)return this.#BASE_ALPHABET[0];let e="";for(;0n<t;){var s=t%this.#baseRadix;t/=this.#baseRadix,e=this.#BASE_ALPHABET[Number(s)]+e}for(;e.length<i;)e=this.#BASE_ALPHABET[0]+e;return e}#fromBase(t){let i=0n;for(var e of t){var s=this.#BASE_MAP[e];if(void 0===s)throw new Error("Invalid character in encoded string: "+e);i=i*this.#baseRadix+s}return i}#generateRandomBits(t){var i,e=Math.ceil(t/8),e=new Uint8Array(e);crypto.getRandomValues(e);let s=0n;for(i of e)s=s<<8n|BigInt(i);return s&(1n<<BigInt(t))-1n}generate(){var t=(1n<<BigInt(this.#timestampBits))-1n,t=BigInt(Math.floor(Date.now()/1e3))&t,i=this.#timestampBits,e=this.#generateRandomBits(i),t=t^e,s=this.#generateRandomBits(this.#randomBits),a=this.#timestampBits+i+this.#randomBits,t=t<<BigInt(i+this.#randomBits)|e<<BigInt(this.#randomBits)|s,i=Math.log2(this.#BASE_ALPHABET.length),e=Math.ceil(a/i);return this.#toBase(t,e)}decode(t){var t=this.#fromBase(t),i=this.#timestampBits,e=(1n<<BigInt(this.#timestampBits))-1n,s=(1n<<BigInt(i))-1n,a=(1n<<BigInt(this.#randomBits))-1n,e=t>>BigInt(i+this.#randomBits)&e,s=t>>BigInt(this.#randomBits)&s,t=t&a,a=e^s;return{timestamp:Number(a),seed:s.toString(16).padStart(Math.ceil(i/4),"0"),random:t.toString(16).padStart(Math.ceil(this.#randomBits/4),"0"),date:new Date(1e3*Number(a))}}}module.exports=NFUID;